generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Profile {
  id       String  @id @default(uuid())
  userId   String  @unique
  name     String
  username String?
  email    String  @db.Text
  imageUrl String  @db.Text

  createdPosts Post[]    @relation("createdPosts")
  likedPosts   Like[]
  comments     Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id          String    @id @default(uuid())
  title       String
  description String    @db.Text
  tag         String
  likes       Like[]
  comments    Comment[]

  profileId String
  profile   Profile @relation("createdPosts", fields: [profileId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}

model Like {
  id        String  @id @default(uuid())
  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  postId    String
  post      Post    @relation(fields: [postId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@index([profileId])
  @@index([postId])
}

model Comment {
  id        String  @id @default(uuid())
  text      String  @db.Text
  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  postId    String
  post      Post    @relation(fields: [postId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@index([profileId])
  @@index([postId])
}
